@page
@model PRN221.Team5.Web.Pages.Dashboard.ManageNews
@{
	ViewData["Title"] = "ManageNews";
}


<div x-data="{'add':false, 'edit': false, 'remove': false }" x-init="dataTable = $('#table_news').DataTable({
    'lengthMenu': [[5, 10, 15, -1], [5, 10, 15, 'All']],
    'responsive': true,
    'ordering': false,
	'scrollX': true,

})">

	<div class="mx-auto max-w-screen-2xl p-4 md:p-6 2xl:p-10">

		<div
			class="bg-white block sm:flex items-center justify-between lg:mt-1.5 dark:bg-graydark/80 dark:border-graydark/60">
			<nav class="flex mb-5" aria-label="Breadcrumb">
				<ol class="inline-flex items-center space-x-1 text-sm font-medium md:space-x-2">
					<li class="inline-flex items-center">
						<a href="#"
							class="inline-flex items-center text-graydark/60 hover:text-primary-600 dark:text-gray dark:hover:text-white">
							<svg class="w-5 h-5 mr-2.5" fill="currentColor" viewBox="0 0 20 20"
								xmlns="http://www.w3.org/2000/svg">
								<path
									d="M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z">
								</path>
							</svg>
							Dashboard
						</a>
					</li>
					<li>
						<div class="flex items-center">
							<svg class="w-6 h-6 text-gray" fill="currentColor" viewBox="0 0 20 20"
								xmlns="http://www.w3.org/2000/svg">
								<path fill-rule="evenodd"
									d="M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z"
									clip-rule="evenodd"></path>
							</svg>
							<a href="#"
								class="ml-1 text-graydark/60 hover:text-primary-600 md:ml-2 dark:text-gray dark:hover:text-white">News</a>
						</div>
					</li>

				</ol>
			</nav>


		</div>

		<div
			class="rounded-sm border border-stroke bg-white px-5 pt-6 pb-2.5 shadow-default dark:border-strokedark dark:bg-boxdark sm:px-7.5 xl:pb-1">

			<div class="flex w-full justify-between my-4">
				<h3 class="mb-6 text-xl font-bold text-black dark:text-white">
					All Posts
				</h3>
				<div class="flex flex-row gap-2">

					<button x-on:click="add = true" id="add-new-btn" onclick="add_new_modal.showModal()"
						class="rounded-xl inline-flex items-center justify-center gap-2.5 bg-primary h-fit py-3 px-6 text-center text-sm font-medium text-white hover:bg-opacity-90 ">
						<span>
							<svg xmlns="http://www.w3.org/2000/svg" id="Layer_1" data-name="Layer 1" viewBox="0 0 24 24"
								width="18" fill="#fff" height="18">
								<path
									d="M17,12c0,.553-.448,1-1,1h-3v3c0,.553-.448,1-1,1s-1-.447-1-1v-3h-3c-.552,0-1-.447-1-1s.448-1,1-1h3v-3c0-.553,.448-1,1-1s1,.447,1,1v3h3c.552,0,1,.447,1,1Zm7-7v14c0,2.757-2.243,5-5,5H5c-2.757,0-5-2.243-5-5V5C0,2.243,2.243,0,5,0h14c2.757,0,5,2.243,5,5Zm-2,0c0-1.654-1.346-3-3-3H5c-1.654,0-3,1.346-3,3v14c0,1.654,1.346,3,3,3h14c1.654,0,3-1.346,3-3V5Z" />
							</svg>

						</span>
						Add New
					</button>
					<button x-on:click="edit = true" id="edit-new-btn"
						class="disabled:bg-graydark/20 disabled:text-graydark/30 rounded-xl inline-flex items-center justify-center gap-2.5 bg-graydark/40 h-fit py-3 px-6 text-center text-sm font-medium text-white hover:bg-opacity-90 ">
						<span>
							<svg xmlns="http://www.w3.org/2000/svg" id="Outline" viewBox="0 0 24 24" width="18"
								height="18" class="fill-current">
								<path
									d="M18.656.93,6.464,13.122A4.966,4.966,0,0,0,5,16.657V18a1,1,0,0,0,1,1H7.343a4.966,4.966,0,0,0,3.535-1.464L23.07,5.344a3.125,3.125,0,0,0,0-4.414A3.194,3.194,0,0,0,18.656.93Zm3,3L9.464,16.122A3.02,3.02,0,0,1,7.343,17H7v-.343a3.02,3.02,0,0,1,.878-2.121L20.07,2.344a1.148,1.148,0,0,1,1.586,0A1.123,1.123,0,0,1,21.656,3.93Z" />
								<path
									d="M23,8.979a1,1,0,0,0-1,1V15H18a3,3,0,0,0-3,3v4H5a3,3,0,0,1-3-3V5A3,3,0,0,1,5,2h9.042a1,1,0,0,0,0-2H5A5.006,5.006,0,0,0,0,5V19a5.006,5.006,0,0,0,5,5H16.343a4.968,4.968,0,0,0,3.536-1.464l2.656-2.658A4.968,4.968,0,0,0,24,16.343V9.979A1,1,0,0,0,23,8.979ZM18.465,21.122a2.975,2.975,0,0,1-1.465.8V18a1,1,0,0,1,1-1h3.925a3.016,3.016,0,0,1-.8,1.464Z" />
							</svg>


						</span>
						Edit
					</button>
					<button x-on:click="remove = true" id="remove-new-btn"
						class="disabled:bg-graydark/20 disabled:text-graydark/30 rounded-xl inline-flex items-center justify-center gap-2.5 bg-danger/20 h-fit py-3 px-6 text-center text-sm font-medium text-danger hover:bg-opacity-90 ">
						<span>
							<svg class="fill-current" xmlns="http://www.w3.org/2000/svg" id="Outline"
								viewBox="0 0 24 24" width="18" height="18">
								<path
									d="M21,4H17.9A5.009,5.009,0,0,0,13,0H11A5.009,5.009,0,0,0,6.1,4H3A1,1,0,0,0,3,6H4V19a5.006,5.006,0,0,0,5,5h6a5.006,5.006,0,0,0,5-5V6h1a1,1,0,0,0,0-2ZM11,2h2a3.006,3.006,0,0,1,2.829,2H8.171A3.006,3.006,0,0,1,11,2Zm7,17a3,3,0,0,1-3,3H9a3,3,0,0,1-3-3V6H18Z" />
								<path d="M10,18a1,1,0,0,0,1-1V11a1,1,0,0,0-2,0v6A1,1,0,0,0,10,18Z" />
								<path d="M14,18a1,1,0,0,0,1-1V11a1,1,0,0,0-2,0v6A1,1,0,0,0,14,18Z" />
							</svg>



						</span>
						Remove
					</button>


				</div>
			</div>

			<table id="table_news" class="w-full table-auto">
				<thead>
					<tr class="bg-gray-2 text-left dark:bg-meta-4">
						<th class="font-medium text-black dark:text-white xl:pl-11">

							Title
						</th>
						<th class="min-w-[200px] font-medium text-black dark:text-white xl:pl-11">
							Description
						</th>

						<th class=" font-medium text-black dark:text-white">
							Status
						</th>
						<th class="min-w-[150px] font-medium text-black dark:text-white text-center">
							Create date
						</th>
						<th class="min-w-[150px] font-medium text-black dark:text-white text-center">
							Create by
						</th>
						<th class="min-w-[150px] font-medium text-black dark:text-white text-center">
							Update date
						</th>
						<th class="min-w-[150px] font-medium text-black dark:text-white text-center">
							Update by
						</th>

					</tr>
				</thead>
				<tbody>
					@foreach (var post in Model.News)
					{
						<tr x-data="{ postStatus: '{{ post.Status }}' }" class="hover:bg-gray-3 dark:hover:bg-meta-4">
							<td class="border-b border-[#eee] py-5 px-4 pl-9 dark:border-strokedark xl:pl-11">
								<p class="text-black dark:text-white line-clamp-1 text-center ">
									@post.Title
								</p>
							</td>
							<td class="border-b border-[#eee] py-5 px-4 pl-9 dark:border-strokedark xl:pl-11">
								<p class="text-black dark:text-white line-clamp-3 text-left ">
									@post.Description
								</p>
							</td>
							<td class="border-b border-[#eee] py-5 px-4 dark:border-strokedark">
								@if (post.Status == ManageNews.Status.Pending)
								{
									<p
										class="line-clamp-1 inline-flex text-center rounded-full bg-opacity-10 py-1 px-3 text-sm font-medium text-warning bg-warning">
										@post.Status
									</p>
								}
								else if (post.Status == ManageNews.Status.Approved)
								{
									<p
										class="line-clamp-1 inline-flex text-center rounded-full bg-opacity-10 py-1 px-3 text-sm font-medium text-success bg-success">
										@post.Status
									</p>
								}
								else if (post.Status == ManageNews.Status.Rejected)
								{
									<p
										class="line-clamp-1 inline-flex text-center rounded-full bg-opacity-10 py-1 px-3 text-sm font-medium text-danger bg-danger">
										@post.Status
									</p>
								}
							</td>

							<td class=" border-b border-[#eee] py-5 px-4 dark:border-strokedark">
								<p class="line-clamp-1 text-black dark:text-white text-center">@post.CreateDate</p>
							</td>
							<td class="border-b border-[#eee] py-5 px-4 dark:border-strokedark">
								<p class="line-clamp-1 text-black dark:text-white text-center">@post.CreateBy</p>
							</td>
							<td class="border-b border-[#eee] py-5 px-4 dark:border-strokedark">
								<p class="line-clamp-1 text-black dark:text-white text-center">@post.UpdateDate</p>
							</td>
							<td class="border-b border-[#eee] py-5 px-4 dark:border-strokedark">
								<p class="line-clamp-1 text-black dark:text-white text-center">@post.UpdateBy</p>
							</td>

						</tr>
					}

				</tbody>
			</table>
		</div>

	</div>
	<!-- Add New Modal -->
	@await Html.PartialAsync("../Shared/Partials/_ModalAddNews.cshtml")
	
	<!-- Edit New Modal -->
	@* <div x-show="edit"
	class="fixed left-0 z-999999 items-center justify-center block overflow-x-hidden overflow-y-auto top-4 md:inset-0
	h-modal sm:h-full bg-graydark/30"
	id="edit-new-modal">
	<div class="mx-auto my-10 justify-center relative w-full h-full max-w-2xl px-4 md:h-auto">
	<!-- Modal content -->
	<div x-on:click.outside="edit = false" class="relative bg-white rounded-lg shadow dark:bg-graydark/80 ">
	<!-- Modal header -->
	<div
	class="flex items-start justify-between p-5 border-b border-gray rounded-t dark:border-graydark/60">
	<h3 class="text-xl font-semibold dark:text-white">Edit Post</h3>
	<button type="button" x-on:click="edit = false"
	class="text-graydark/500 bg-transparent hover:bg-gray hover:text-graydark rounded-lg text-sm p-1.5 ml-auto
	inline-flex items-center dark:hover:bg-graydark/60 dark:hover:text-white"
	data-modal-toggle="edit-new-modal">
	<svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
	<path fill-rule="evenodd"
	d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414
	1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
	clip-rule="evenodd"></path>
	</svg>
	</button>
	</div>
	<!-- Modal body -->
	<div class="p-6 space-y-6">
	<form method="post">
	<div class="grid grid-cols-6 gap-6">
	<div class="col-span-6 sm:col-span-3">
	<label for="full-name"
	class="block mb-2 text-sm font-medium text-graydark dark:text-white">Creator</label>
	<div class="relative pointer-events-none">
	<input type="text" value="@Model.Creator.FullName" readonly
	class="shadow-sm bg-gray border border-gray text-graydark sm:text-sm rounded-lg focus:ring-primary
	focus:border-primary block w-full p-2.5 dark:bg-graydark/60 dark:border-graydark/80 dark:placeholder-gray
	dark:text-white dark:focus:ring-primary dark:focus:border-primary" />
	</div>
	</div>
	<div class="col-span-4 sm:col-span-2">
	<label for="created-date"
	class="block mb-2 text-sm font-medium text-graydark dark:text-white">Created
	Date</label>
	<div class="relative pointer-events-none">
	<input type="date" value="@DateTime.Now.ToString("yyyy-MM-dd")"
	class="shadow-sm bg-gray border border-gray text-graydark sm:text-sm rounded-lg focus:ring-primary
	focus:border-primary block w-full p-2.5 dark:bg-graydark/60 dark:border-graydark/80 dark:placeholder-gray
	dark:text-white dark:focus:ring-primary dark:focus:border-primary" />
	</div>
	</div>

	<div class="col-span-2 sm:col-span-1">
	<label for="creator-role"
	class="block mb-2 text-sm font-medium text-graydark dark:text-white">Role</label>
	<div class="relative pointer-events-none">
	<input type="text" value="@Model.Creator.Role" readonly
	class="shadow-sm bg-gray border border-gray text-graydark sm:text-sm rounded-lg focus:ring-primary
	focus:border-primary block w-full p-2.5 dark:bg-graydark/60 dark:border-graydark/80 dark:placeholder-gray
	dark:text-white dark:focus:ring-primary dark:focus:border-primary" />
	</div>
	</div>
	<div class="col-span-8 sm:col-span-4">
	<label
	class="block mb-2 text-sm font-medium text-graydark dark:text-white">Title</label>
	<input type="text" asp-for="NewPost.Title" id="title"
	class="shadow-sm bg-gray border border-gray text-graydark sm:text-sm rounded-lg focus:ring-primary
	focus:border-primary block w-full p-2.5 dark:bg-graydark/60 dark:border-graydark/80 dark:placeholder-gray
	dark:text-white dark:focus:ring-primary dark:focus:border-primary"
	placeholder="Enter title for this post" required />
	</div>

	<div class="col-span-12 sm:col-span-6">
	<label class="mb-3 block font-medium text-sm text-black dark:text-white">
	Description
	</label>
	<textarea rows="6" placeholder="Default textarea" asp-for="NewPost.Description" required
	class="shadow-sm bg-gray border border-gray text-graydark sm:text-sm rounded-lg focus:ring-primary
	focus:border-primary block w-full p-2.5 dark:bg-graydark/60 dark:border-graydark/80 dark:placeholder-gray
	dark:text-white dark:focus:ring-primary dark:focus:border-primary"></textarea>
	</div>
	</div>
	<div class="items-center flex justify-center rounded-b dark:border-graydark/60 my-4">
	<button type="submit"
	class="rounded-xl inline-flex items-center justify-center gap-2.5 bg-primary h-fit py-3 px-6 text-center text-sm
	font-medium text-white hover:bg-opacity-90 ">

	Submit
	</button>
	</div>
	</form>
	<!-- Modal footer -->

	</div>
	</div>
	</div>
	</div>
	<!-- Delete New Modal -->


	<div x-show="remove"
	class="fixed left-0 z-999999 items-center justify-center block overflow-x-hidden overflow-y-auto top-4 md:inset-0
	h-modal sm:h-full bg-graydark/30"
	id="remove-new-modal">
	<div class="mx-auto my-10 justify-center relative w-full h-full max-w-2xl px-4 md:h-auto">
	<!-- Modal content -->
	<div x-on:click.outside="remove = false" class="relative bg-white rounded-lg shadow dark:bg-graydark/80 ">
	<!-- Modal header -->
	<div
	class="flex items-start justify-between p-5 border-b border-gray rounded-t dark:border-graydark/60">
	<h3 class="text-xl font-semibold dark:text-white">Remove Post</h3>
	<button type="button" x-on:click="remove = false"
	class="text-graydark/500 bg-transparent hover:bg-gray hover:text-graydark rounded-lg text-sm p-1.5 ml-auto
	inline-flex items-center dark:hover:bg-graydark/60 dark:hover:text-white"
	data-modal-toggle="remove-new-modal">
	<svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
	<path fill-rule="evenodd"
	d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414
	1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
	clip-rule="evenodd"></path>
	</svg>
	</button>
	</div>
	<!-- Modal body -->
	<div class="p-6 space-y-6">
	<form method="post">
	<div class="text-center">
	<svg class="mx-auto mb-4 text-gray-400 w-12 h-12 dark:text-gray" aria-hidden="true"
	xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20">
	<path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"
	stroke-width="2" d="M10 11V6m0 8h.01M19 10a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z" />
	</svg>
	<h3 class="mb-5 text-lg font-normal text-graydark/50 dark:text-gray-400">Are you sure you
	want
	to delete this post?</h3>
	<button type="submit"
	class="text-white bg-red-600 hover:bg-red-800 focus:ring-4 focus:outline-none focus:ring-red-300
	dark:focus:ring-red-800 font-medium rounded-lg text-sm inline-flex items-center px-5 py-2.5 text-center mr-2">
	Yes, I'm sure
	</button>
	<button type="button" x-on:click="remove = false"
	class="text-graydark/50 bg-white hover:bg-gray focus:ring-4 focus:outline-none focus:ring-gray rounded-lg border
	border-gray text-sm font-medium px-5 py-2.5 hover:text-graydark/90 focus:z-10 dark:bg-graydark/70 dark:text-gray
	dark:border-graydark/50 dark:hover:text-white dark:hover:bg-graydark/60 dark:focus:ring-graydark/60">No,
	cancel</button>
	</div>
	</form>
	<!-- Modal footer -->

	</div>
	</div>
	</div>
	</div> *@

</div>

<script>
	document.addEventListener('DOMContentLoaded', function () {
		// Get the DataTable instance
		const table = dataTable;
		let selectedRow = null; // Store the selected row
		let rowData = null;
		const addButton = document.getElementById('add-new-btn');
		const editButton = document.getElementById('edit-new-btn');
		const deleteButton = document.getElementById('remove-new-btn');
		const addModal = document.getElementById('add-new-modal');
		const editModal = document.getElementById('edit-new-modal');
		const deleteModal = document.getElementById('remove-new-modal');

		// Add a click event listener for the add button
		@* addButton.addEventListener('click', function () {
			addModal.classList.add('block');
			addModal.classList.remove('hidden');
		}); *@

		table.on('click', 'tbody tr', function () {
			const row = $(this);
			console.log(table.row(this).data());

			if (selectedRow !== null) {
				selectedRow.removeClass('selected');
			}


			if (!row.hasClass('selected')) {
				row.addClass('selected');
				selectedRow = row; // Update the selected row
			} else {
				selectedRow = null; // Deselect the current row
			}
			updateButtonState();
		});


		function updateButtonState() {
			const editButton = document.getElementById('edit-new-btn');
			const deleteButton = document.getElementById('remove-new-btn');

			if (selectedRow !== null) {
				editButton.removeAttribute('disabled'); // Enable the button
				deleteButton.removeAttribute('disabled')
			} else {
				editButton.setAttribute('disabled', 'disabled'); // Disable the button
				deleteButton.setAttribute('disabled', 'disabled'); // Disable the button
			}
		}



		// Initially, set the button state based on the selectedRow
		updateButtonState();
	});

</script>